{"version":3,"file":"component---src-pages-garderie-griffin-js.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/./src/components/index.module.css","webpack://gatsby-starter-default/./src/static/amc-resume1.pdf","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/./src/components/CaseStudyContent5050/CaseStudyContent5050.js","webpack://gatsby-starter-default/./src/components/CaseStudyContentBlock/CaseStudyContentBlock.js","webpack://gatsby-starter-default/./src/components/CaseStudyContentVisual/CaseStudyContentVisual.js","webpack://gatsby-starter-default/./src/components/CaseStudyHeader/CaseStudyHeader.js","webpack://gatsby-starter-default/./src/components/CaseStudyImage/CaseStudyImage.js","webpack://gatsby-starter-default/./src/components/CaseStudyIntro/CaseStudyIntro.js","webpack://gatsby-starter-default/./src/components/CaseStudyProcess/CaseStudyProcess.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/garderie-griffin.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","// Exports\nexport var hero = \"index-module--hero--82553\";\nexport var title = \"index-module--title--20f3b\";\n","export default \"/static/amc-resume1-e212659111e313c630bde34d853d41c7.pdf\";","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\"\nimport \"./CaseStudyContent5050.css\"\nimport \"../layout.css\"\n\nexport default function CaseStudyContent5050(props) {\n\n  return (\n    <div className=\"content_5050\">\n        <div className=\"block_half\" style={props.b1Style}>\n          <h3>{props.b1Supertitle}</h3>\n          <h1 className=\"half_title\">{props.b1Title}</h1>\n          <ol className=\"half_list\">\n            <li>{props.b1ListItem1}</li>\n            <li>{props.b1ListItem2}</li>\n            <li>{props.b1ListItem3}</li>\n          </ol>\n        </div>\n\n        <div className=\"block_half\" style={props.b2Style}>\n          <h3>{props.b2Supertitle}</h3>\n          <h1 className=\"half_title\">{props.b2Title}</h1>\n          <ol className=\"half_list\">\n            <li>{props.b2ListItem1}</li>\n            <li>{props.b2ListItem2}</li>\n            <li>{props.b2ListItem3}</li>\n          </ol>\n        </div>\n\n    </div>\n\n  )\n};","import * as React from \"react\"\nimport \"./CaseStudyContentBlock.css\"\nimport \"../layout.css\"\n\nexport default function CaseStudyContentBlock(props) {\n\n  return (\n    <div className=\"block\">\n      <div className=\"block_content\">\n        <h3>{props.supertitle}</h3>\n        <h1 className=\"content_title\">{props.title}</h1>\n        <p className=\"content_text\">{props?.text}</p>\n        <div className=\"content_image\">\n          {props?.image}\n        </div>\n      </div>\n     \n    </div>\n  )\n};","import * as React from \"react\"\nimport \"./CaseStudyContentVisual.css\"\nimport \"../layout.css\"\n\nexport default function CaseStudyContentVisual(props) {\n\n  return (\n    <div className=\"content_visual\" style={props.style}>\n      <h3>{props.supertitle}</h3>\n      <h1 className=\"visual_title\">{props.title}</h1>\n      <div className=\"visual_image\">\n        {props.image}\n      </div>\n    </div>\n  )\n};","import * as React from \"react\"\nimport \"./CaseStudyHeader.css\"\nimport \"../layout.css\"\n\nexport default function CaseStudyHeader(props) {\n\n  return (\n    <div className=\"header\" style={props.style}>\n      <h3>case study</h3>\n      <h1 className=\"header_title\">{props.title}</h1>\n      <div className=\"header_image\">\n        {props.image}\n      </div>\n    </div>\n  )\n};","import * as React from \"react\"\nimport \"./CaseStudyImage.css\"\nimport \"../layout.css\"\n\nexport default function CaseStudyImage(props) {\n\n  return (\n    <div className=\"block_image\">\n      {props.image}\n    </div>\n  )\n};","import * as React from \"react\"\nimport \"./CaseStudyIntro.css\"\nimport \"../layout.css\"\nimport { navigate } from \"gatsby\"\n\n\nexport default function CaseStudyIntro(props) {\n\n  const openInNewTab = (url) => {\n    window.open(url, \"_blank\", \"noreferrer\");\n  };\n\n  return (\n    <div className=\"intro\">\n      <div className=\"intro_content\">\n        <div className=\"intro_left\">\n          <h1 className=\"intro_title\">Project overview</h1>\n          <p className=\"intro_description\">{props.description}</p>\n          <button \n            role=\"link\"\n            onClick={() => openInNewTab(props.link)}\n            className=\"primary_button\">\n            {props.buttonLabel}\n          </button>\n        </div>\n        <div className=\"intro_right\">\n          <h3>role</h3>\n          <p className=\"role\">{props.role}</p>\n          <h3>{props.flexTitle}</h3>\n          <p>{props.flexDescription}</p>\n          <h3>date</h3>\n          <p>{props.date}</p>\n        </div>\n      </div>\n  </div>\n  );\n};","import * as React from \"react\"\nimport \"./CaseStudyProcess.css\"\nimport \"../layout.css\"\n\nexport default function CaseStudyProcess(props) {\n\n  return (\n    <div className=\"process\" style={props.style}>\n      <h1 className=\"process_title\">Design process</h1>\n      {props.image}\n    </div>\n  )\n};","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./header.css\"\nimport { withPrefix } from \"gatsby\"\nimport PDF from '../static/amc-resume1.pdf'\n\nexport default function Header() {\n\n  return (\n    <header>\n      <div className=\"nav-container\">\n        <div className=\"nav-left\">\n          <Link className=\"primary-link\" to=\"/\">Anne-Marie Champoux</Link>\n        </div>\n        <div className=\"nav-right\">\n          <Link className=\"secondary-link\" to=\"/\">Work</Link>\n          <Link className=\"secondary-link\" to=\"/about\">About</Link>\n          <a className=\"secondary-link\" rel=\"noopener noreferrer\" href={PDF} target=\"_blank\"> Resume</a>\n        </div>\n      </div>\n    </header>\n\n  )};\n  // <header\n  //   style={{\n  //     margin: `0 auto`,\n  //     padding: `var(--space-4) var(--size-gutter)`,\n  //     display: `flex`,\n  //     alignItems: `center`,\n  //     justifyContent: `space-between`,\n  //   }}\n  // >\n  //   <Link\n  //     to=\"/\"\n  //     style={{\n  //       fontSize: `var(--font-sm)`,\n  //       textDecoration: `none`,\n  //     }}\n  //   >\n  //     {siteTitle}\n  //   </Link>\n  //   <h2>About</h2>\n  //   <img\n  //     alt=\"Gatsby logo\"\n  //     height={20}\n  //     style={{ margin: 0 }}\n  //     src=\"data:image/svg+xml,%3Csvg fill='none' viewBox='0 0 107 28' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3CclipPath id='a'%3E%3Cpath d='m0 0h106.1v28h-106.1z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cg fill='%23000'%3E%3Cpath clip-rule='evenodd' d='m89 11.7c-.8 0-2.2.2-3.2 1.6v-8.10005h-2.8v16.80005h2.7v-1.3c1.1 1.5 2.6 1.5999 3.2 1.5999 3 0 5-2.2999 5-5.2999s-2-5.3-4.9-5.3zm-.7 2.5c1.7 0 2.8 1.2 2.8 2.8s-1.2 2.8-2.8 2.8c-1.7 0-2.8-1.2-2.8-2.8s1.1-2.8 2.8-2.8z' fill-rule='evenodd'/%3E%3Cpath d='m71.2 21.9999v-7.6h1.9v-2.4h-1.9v-3.40005h-2.8v3.40005h-1.1v2.4h1.1v7.6z'/%3E%3Cpath clip-rule='evenodd' d='m65.6999 12h-2.9v1.3c-.8999-1.5-2.4-1.6-3.2-1.6-2.9 0-4.8999 2.4-4.8999 5.3s1.9999 5.2999 5.0999 5.2999c.8 0 2.1001-.0999 3.1001-1.5999v1.3h2.7999zm-5.1999 7.8c-1.7001 0-2.8-1.2-2.8-2.8s1.2-2.8 2.8-2.8c1.7 0 2.7999 1.2 2.7999 2.8s-1.1999 2.8-2.7999 2.8z' fill-rule='evenodd'/%3E%3Cpath d='m79.7001 14.4c-.7-.6-1.3-.7-1.6-.7-.7 0-1.1.3-1.1.8 0 .3.1.6.9.9l.7.2c.1261.0472.2621.0945.4037.1437.7571.2632 1.6751.5823 2.0963 1.2563.3.4.5 1 .5 1.7 0 .9-.3 1.8-1.1 2.5s-1.8 1.0999-3 1.0999c-2.1 0-3.2-.9999-3.9-1.6999l1.5-1.7c.6.6 1.4 1.2 2.2 1.2s1.4-.4 1.4-1.1c0-.6-.5-.9-.9-1l-.6-.2c-.0687-.0295-.1384-.0589-.2087-.0887l-.0011-.0004c-.6458-.2729-1.3496-.5704-1.8902-1.1109-.5-.5-.8-1.1-.8-1.9 0-1 .5-1.8 1-2.3.8-.6 1.8-.7 2.6-.7.7 0 1.9.1 3.2 1.1z'/%3E%3Cpath d='m98.5 20.5-4.8-8.5h3.3l3.1 5.7 2.8-5.7h3.2l-8 15.3h-3.2z'/%3E%3Cpath d='m47 13.7h7c0 .0634.01.1267.0206.1932.0227.1435.0477.3018-.0206.5068 0 4.5-3.4 8.1-8 8.1s-8-3.6-8-8.1c0-4.49995 3.6-8.09995 8-8.09995 2.6 0 5 1.2 6.5 3.3l-2.3 1.49995c-1-1.29995-2.6-2.09995-4.2-2.09995-2.9 0-4.9 2.49995-4.9 5.39995s2.1 5.3 5 5.3c2.6 0 4-1.3 4.6-3.2h-3.7z'/%3E%3C/g%3E%3Cpath d='m18 14h7c0 5.2-3.7 9.6-8.5 10.8l-13.19995-13.2c1.1-4.9 5.5-8.6 10.69995-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.29995 2.5-8.49995 6l11.49995 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8z' fill='%23fff'/%3E%3Cpath d='m6.2 21.7001c-2.1-2.1-3.2-4.8-3.2-7.6l10.8 10.8c-2.7 0-5.5-1.1-7.6-3.2z' fill='%23fff'/%3E%3Cpath d='m14 0c-7.7 0-14 6.3-14 14s6.3 14 14 14 14-6.3 14-14-6.3-14-14-14zm-7.8 21.8c-2.1-2.1-3.2-4.9-3.2-7.6l10.9 10.8c-2.8-.1-5.6-1.1-7.7-3.2zm10.2 2.9-13.1-13.1c1.1-4.9 5.5-8.6 10.7-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.2 2.5-8.5 6l11.5 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8v-2h7c0 5.2-3.7 9.6-8.6 10.7z' fill='%237026b9'/%3E%3C/g%3E%3C/svg%3E\"\n  //   />\n  // </header>\n\n\n\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport CaseStudyHeader from \"../components/CaseStudyHeader/CaseStudyHeader\"\nimport Layout from \"../components/layout\"\nimport * as styles from \"../components/index.module.css\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport CaseStudyIntro from \"../components/CaseStudyIntro/CaseStudyIntro\"\nimport CaseStudyProcess from \"../components/CaseStudyProcess/CaseStudyProcess\"\nimport CaseStudyContentBlock from \"../components/CaseStudyContentBlock/CaseStudyContentBlock\"\nimport CaseStudyContent5050 from \"../components/CaseStudyContent5050/CaseStudyContent5050\"\nimport CaseStudyContentVisual from \"../components/CaseStudyContentVisual/CaseStudyContentVisual\"\nimport CaseStudyImage from \"../components/CaseStudyImage/CaseStudyImage\"\n// import NewLineText from \"../components/NewLineText\"\n\nexport default function GarderieGriffinPage () {\n\n\n  return (\n    <Layout>\n      <CaseStudyHeader\n        style={{ backgroundColor: `#FFF3E7` }}\n        title=\"Garderie Griffin\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/main.png\"\n            loading=\"eager\"\n            width={620}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"Garderie griffin website\"\n          />\n        }\n      />\n      <CaseStudyIntro\n        description={'Garderie Griffin is a private kindergarten, well established  in Montreal, Griffintown since 10 years.\\n\\nWord of mouth was mainly how they acquire new clients. With the rise of newcomers in the neighborhood, a responsive website easily maintenable was a must have.'}\n        buttonLabel=\"Visit website\"\n        link=\"https://garderiegriffin.com/en/home/\"\n        role= {'User Experience\\nVisual Design\\nWordpress Integration'}\n        flexTitle=\"Client\"\n        flexDescription=\"Garderie Griffin\"\n        date=\"2021 - today\"\n      />\n      <CaseStudyProcess \n        style= {{ backgroundColor: `#FFF3E7` }}\n        image={\n          <StaticImage\n            src=\"../images/design-process.png\"\n            loading=\"eager\"\n            width={830}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"Design process\"\n          />\n        }\n      />\n      <CaseStudyContentBlock\n        supertitle=\"empathize\"\n        title=\"User interviews\"\n        text={'Being a mother of two, I know how it feels trying to find the perfect kindergarten for your kid, visit a lot of places, subscribe to too many waiting lists, and start to stress out a few weeks before going back to work.\\n\\nAlthough I had my journey, I wanted to hear about the experience of other parents to have a clear understanding of the various challenges when searching for a kindergarten. I conducted interviews with four parents of Griffin Kindergarten and two parents who choose another place in the neighborhood.\\n\\nI asked them to explain their search process, their motivations, frustrations, and how they made their choice.'}\n      />\n      <CaseStudyContentBlock\n        supertitle=\"define\"\n        title=\"User personas\"\n        text=\"A lot of good insights came from the user interviews. Depending on the family situation, their location, the age of their kids, the needs where different. Those findings allowed me to define the main user personas to refer to along this project.\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/personas.png\"\n            loading=\"eager\"\n            width={915}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"User personas\"\n          />\n        }\n      />\n      <CaseStudyContent5050\n      b1Style= {{ backgroundColor: `#FFF3E7` }}\n      b1Supertitle= \"define\"\n      b1Title= \"The problem\"\n      b1ListItem1= \"People needs to have a good impression from the first click on the website.\"\n      b1ListItem2= \"People needs to understand he culture, the values and learn about the team.\"\n      b1ListItem3= \"People needs to access quickly to practical information.\"\n\n      b2Style= {{ backgroundColor: `#FFF3E7` }}\n      b2Supertitle= \"ideate\"\n      b2Title= \"The solution\"\n      b2ListItem1= \"The use of vibrant colors and soft imagery can communicate comfort and childhood.\"\n      b2ListItem2= \"In-depth and well structured explanatory content pages.\"\n      b2ListItem3= \"Access to key sections from the first level of navigation.\"\n      />\n      <CaseStudyContentBlock\n        supertitle=\"prototype\"\n        title=\"User flow\"\n        text=\"The new mom and the professional constitute the major part of Garderie Griffin customer base. To make sure that the solution will align with their navigation behaviour, I built a user flow.\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/userflow.png\"\n            loading=\"eager\"\n            width={641}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"User flow\"\n          />\n        }\n      />\n      <CaseStudyContentBlock\n        supertitle=\"prototype\"\n        title=\"Information architecture\"\n        text=\"Based on the user needs, their navigation pattern and the information available about the kindergarten, an information architecture was created and helped to structure the new website.\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/arbo.png\"\n            loading=\"eager\"\n            width={950}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"User flow\"\n          />\n        }\n      />\n      <CaseStudyContentVisual\n        style={{ backgroundColor: `#EFEFEF` }}\n        supertitle=\"prototype\"\n        title=\"Wireframing\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/wireframes.png\"\n            loading=\"eager\"\n            width={1220}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"Website wireframes\"\n          />\n        }\n      />\n      <CaseStudyContentBlock\n        supertitle=\"prototype\"\n        title=\"UI style guide\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/styleguide.png\"\n            loading=\"eager\"\n            width={950}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"User flow\"\n          />\n        }\n      />\n      <CaseStudyContentVisual\n        style={{ backgroundColor: `#EFEFEF` }}\n        supertitle=\"prototype\"\n        title=\"Mockups\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/ui.png\"\n            loading=\"eager\"\n            width={1220}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"website ui mockups\"\n          />\n        }\n      />\n      <CaseStudyContentBlock\n        supertitle=\"prototype\"\n        title=\"Reusable components\"\n        text=\"One of the objectives of the new website was to be easy to maintain. To make sure that the team members without prior programming knowledge can update the website, several reusable components have been created.\"\n        image={\n          <StaticImage\n            src=\"../images/Griffin/components.png\"\n            loading=\"eager\"\n            width={950}\n            quality={100}\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            alt=\"User flow\"\n          />\n        }\n      />\n      <CaseStudyContentBlock\n        supertitle=\"test\"\n        title=\"Usability testing\"\n        text=\"Many iterations were done on the information architecture and mockups until most of the key users feed back were addressed. Today, the website is still evolving and it is really helpful to organize user testing session before implementing new features.\"\n      />\n      <CaseStudyImage\n       image={\n        <StaticImage\n          src=\"../images/Griffin/final.png\"\n          loading=\"eager\"\n          width={1353}\n          quality={100}\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          alt=\"User flow\"\n        />\n       }\n      />\n\n    </Layout>\n\n  )\n\n  \n}"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","DEFAULT_FLUID_WIDTH","DEFAULT_FIXED_WIDTH","DEFAULT_ASPECT_RATIO","warn","message","sortNumeric","a","b","getSizes","width","layout","getSrcSet","images","map","image","src","join","formatFromFilename","filename","lastIndexOf","dot","ext","slice","length","setDefaultDimensions","args","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","_extends","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","_sourceMetadata","pluginName","reporter","_args2$reporter","backgroundColor","placeholderURL","Error","Set","size","has","delete","add","imageSizes","imgDimensions","_args$reporter","_args$breakpoints","erroneousUserDimensions","Object","entries","filter","_","_ref","dim","_ref2","_ref2$fit","outputPixelDensities","_ref2$reporter","densities","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","originalWidth","fixedDimension","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","_result$sources","push","type","imageProps","placeholder","values","Array","from","sort","_ref3","_ref3$fit","_ref3$outputPixelDens","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","_widthOption","max","N","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2$images","_getImage2","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","_breakpoints","withArtDirection","defaultImage","artDirected","_output$placeholder","_output$placeholder$s","output","_excluded2","media","process","env","NODE_ENV","console","source","concat","apply","_Picture$propTypes","loading","alt","shouldLoad","React","decoding","undefined","Picture","_ref2$shouldLoad","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","createElement","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","G","V","removeNewLines","str","replace","GatsbyImage","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","_getWrapperProps","wClass","wrapperProps","cleanedImages","getPlaceholderProps","isLoaded","top","left","bottom","right","opacity","transition","isLoading","transform","willChange","getMainProps","_excluded","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","CaseStudyContent5050","b1Style","b1Supertitle","b1Title","b1ListItem1","b1ListItem2","b1ListItem3","b2Style","b2Supertitle","b2Title","b2ListItem1","b2ListItem2","b2ListItem3","CaseStudyContentBlock","supertitle","title","text","CaseStudyContentVisual","CaseStudyHeader","CaseStudyImage","navigate","CaseStudyIntro","openInNewTab","url","window","open","description","link","buttonLabel","flexTitle","flexDescription","date","CaseStudyProcess","Link","withPrefix","PDF","Header","Layout","data","site","siteMetadata","margin","padding","marginTop","fontSize","Date","getFullYear","styles","GarderieGriffinPage"],"sourceRoot":""}